GM.BystanderNameParts = {
male={
	"Джеймс",
	"Джон",
	"Роберт",
	"Майкл",
	"Уильям",
	"Дэвид",
	"Ричард",
	"Чарли",
	"Иосиф",
	"Томас",
	"Кристофер",
	"Дэниел",
	"Павел",
	"Марк",
	"Дональд",
	"Джордж",
	"Кеннет",
	"Стивен",
	"Эдвард",
	"Брайан",
	"Рональд",
	"Антон",
	"Кевин",
	"Джэйсон",
	"Мэтью",
	"Гарри",
	"Тимоти",
	"Джозеф",
	"Ларри",
	"Джеффри",
	"Фрэнк",
	"Скотт",
	"Эрик",
	"Стивен",
	"Андрей",
	"Раймонд",
	"Григорий",
	"Джошуа",
	"Джерри",
	"Деннис",
	"Уолтер",
	"Патрик",
	"Питер",
	"Гарольд",
	"Дуглас",
	"Генри",
	"Карл",
	"Артур",
	"Райан",
	"Роджер",
	"Джо",
	"Глеб",
	"Джэк",
	"Альберт",
	"Джонатан",
	"Джастин",
	"Терри",
	"Геральд",
	"Кит",
	"Самуэль",
	"Вилли",
	"Ральф",
	"Лоренс",
	"Николай",
	"Рой",
	"Бенджамин",
	"Брюс",
	"Брэндон",
	"Адам",
	"Гарри",
	"Фрэд",
	"Уэйн",
	"Билли",
	"Стив",
	"Луи",
	"Джереми",
	"Арон",
	"Рэндт",
	"Говард",
	"Евгений",
	"Карлос",
	"Рассел",
	"Бобби",
	"Виктор",
	"Мартин",
	"Эрнест",
	"Филипп",
	"Тодд",
	"Джесси",
	"Крейг",
	"Алан",
	"Шон",
	"Кларенс",
	"Шон",
	"Филипп",
	"Крис",
	"Джонни",
	"Йорл",
	"Джимми",
	"Антонио",
	"Дэнни",
	"Брайан",
	"Тони",
	"Луис",
	"Майк",
	"Стэнли",
	"Леонард",
	"Натан",
	"Дэйл",
	"Мануэль",
	"Родни",
	"Кертис",
	"Норман",
	"Аллен",
 "Марвин",
 "Винсент",
 "Гленн",
 "Джеффери",
 "Трэвис",
 "Джефф",
 "Чад",
 "Иаков",
 "Укрытие",
 "Мелвин",
 "Альфред",
 "Кайла",
 "Фрэнсис",
 "Брэдли",
 "Jachai",
 "Герберт",
 "Фредерик",
 "Скат",
 "Джоул",
 "Эдвин",
 "Дон",
 "Эдди",
 "Рикки",
 "Трой",
 "Рэнделл",
 "Барри",
 "Александр",
 "Бернард",
 "Марио",
 "Лерой",
 "Франциско",
 "Маркус",
 "Майкл",
 "Теодор",
 "Клиффорд",
 "Мигель",
 "Оскар",
 "Сойка",
 "Джим",
 "Том",
 "Кальвин",
 "Алекс",
 "Джон",
 "Ронни",
 "Законопроект",
 "Ллойд",
 "Томми",
 "Леон",
 "Дерек",
 "Уоррен",
 "Даррелл",
 "Джером",
 "Флойд",
 "Лео",
 "Элвин",
 "Тим",
 "Уэсли",
 "Гордон",
 "Декан",
 "Грэг",
 "Хорхе",
 "Дастин",
 "Педро",
 "Кран",
 "Дан",
 "Льюис",
 "Захарий",
 "Кори",
 "Герман",
 "Тревор",
 "Вернон",
 "Роберто",
 "Клайд",
 "Глен",
 "Гектор",
 "Шейн",
 "Рикардо",
 "Сэм",
 "Стог",
 "Лестер",
 "Брент",
 "Рамон",
 "Чарли",
 "Тайлер",
 "Гильберт",
 "Ген",
 "Выжимки",
 "Реджинальд",
 "Рубен",
 "Бретт",
 "Джейс",
 "Натаниэль",
 "Рафаэль",
 "Лесли",
 "Эдгар",
 "Милтон",
 "Рауль",
 "Бен",
 "Честер",
 "Сесил",
 "Дуэйн",
 "Франклин",
 "Андре",
 "Элмер",
 "Штифтик",
 "Габриэль",
 "Рон",
 "Митчелл",
 "Роланд",
 "Арнольд",
 "Харви",
 "Джаред",
 "Адриан",
 "Карл",
 "Кори",
 "Клод",
 "Эрик",
 "Дэррил",
 "Джейми",
 "Нил",
 "Джесси",
 "Христианин",
 "Хавьер",
 "Фернандо",
 "Клинтон",
 "Тед",
 "Мэтью",
 "Тайрон",
 "Даррен",
 "Лонни",
 "Пик",
 "Коди",
 "Хулио",
 "Джимбо",
 "Курт",
 "Аллан",
 "Нельсон",
 "Парень",
 "Клейтон",
 "Хью",
 "Макс",
 "Дуэйн",
 "Дуайт",
 "Армандо",
 "Феликс",
 "Джимми",
 "Эверетт",
 "Иордан",
 "Ян",
 "Уоллес",
 "Хоризон",
 "Боб",
 "Хайме",
 "Кейси",
 "Альфредо",
 "Альберто",
 "Дейв",
 "Иван",
 "Джонни",
 "Сидней",
 "Байрон",
 "Джулиан",
 "Исаак",
 "Моррис",
 "Клифтон",
 "Уиллард",
 "Дэрил",
 "Росс",
 "Вергилий",
 "Энди",
 "Маршалл",
 "Сальвадор",
 "Сидорович",
 "Кирк",
 "Серхио",
 "Марион",
 "Трейси",
 "Сэт",
 "Кент",
 "Теренс",
 "Рене",
 "Эдуард",
 "Теренс",
 "Энрик",
 "Фредди",
 "Вэйн"
},
female={
"Мэри",
 "Патриция",
 "Линда",
 "Барбара",
 "Элизабет",
 "Дженнифер",
 "Мария",
 "Сьюзен",
 "Маргарет",
 "Дороти",
 "Лиза",
 "Нэнси",
 "Карен",
 "Бетти",
 "Елена",
 "Сандра",
 "Донна",
 "Кэрол",
 "Рут",
 "Шарон",
 "Мишель",
 "Лаура",
 "Сара",
 "Кимберли",
 "Дебора",
 "Джессика",
 "Ширли",
 "Синтия",
 "Анжела",
 "Мелисса",
 "Бренда",
 "Эми",
 "Анна",
 "Ребекка",
 "Вирджиния",
 "Кэтлин",
 "Памела",
 "Марта",
 "Дебра",
 "Аманда",
 "Стефани",
 "Кэролин",
 "Кристин",
 "Мэри",
 "Жанет",
 "Кэтрин",
 "Франческа",
 "Энн",
 "Джойс",
 "Диана",
 "Алиса",
 "Джулия",
 "Вереск",
 "Тереза",
 "Дорис",
 "Глория",
 "Эвелин",
 "Джин",
 "Шерил",
 "Милдред",
 "Кэтрин",
 "Джоан",
 "Ашли",
 "Джудит",
 "Роза",
 "Дженис",
 "Келли",
 "Николь",
 "Джуди",
 "Кристина",
 "Кэти",
 "Тереза",
 "Беверли",
 "Дениз",
 "Тэмми",
 "Ирен",
 "Джейн",
 "Лори",
 "Рахиль",
 "Мэрилин",
 "Андреа",
 "Катрин",
 "Луиза",
 "Сара",
 "Анна",
 "Жаклин",
 "Ванда",
 "Бонни",
 "Юлия",
 "Раби",
 "Лоис",
 "Тина",
 "Филлис",
 "Норма",
 "Паула",
 "Диана",
 "Энни",
 "Лилиан",
 "Эмилия",
 "Роби",
 "Пегги",
 "Криста",
 "Глэдис",
 "Рита",
 "Рассвет",
 "Конни",
 "Тейлор",
 "Трейси",
 "Эдна",
 "Тифани",
 "Кармен",
 "Роза",
 "Синди",
 "Грэйс",
 "Венди",
 "Виктория",
 "Эдит",
 "Ким",
 "Херес",
 "Сильвия",
 "Жозефина",
 "Тельма",
 "Шеннон",
 "Шейла",
 "Этель",
 "Эллен",
 "Элейн",
 "Марджори",
 "Кэрри",
 "Шарлотта",
 "Моника",
 "Эстер",
 "Полина",
 "Эмма",
 "Хуанита",
 "Анита",
 "Ронда",
 "Браун",
 "Эмбер",
 "Ева",
 "Дебби",
 "Эйприл",
 "Лесли",
 "Клара",
 "Люсиль",
 "Джейми",
 "Джоан",
 "Элеонора",
 "Валери",
 "Даниэль",
 "Меган",
 "Алисия",
 "Сюзанна",
 "Мишель",
 "Гейл",
 "Берта",
 "Дарлин",
 "Вероника",
 "Джилл",
 "Эрин",
 "Джеральдин",
 "Лорен",
 "Кэти",
 "Джоанн",
 "Лорэйн",
 "Линн",
 "Салли",
 "Регина",
 "Эрик",
 "Беатрис",
 "Долорес",
 "Бернис",
 "Одри",
 "Ивон",
 "Аннета",
 "Июнь",
 "Саманта",
 "Марион",
 "Дана",
 "Стейси",
 "Анна",
 "Рене",
 "Мар",
 "Вивиан",
 "Роберта",
 "Холли",
 "Британи",
 "Мелани",
 "Лоретта",
 "Иоланда",
 "Жанетта",
 "Лори",
 "Кэти",
 "Кристен",
 "Ванесса",
 "Алма",
 "Сью",
 "Элси",
 "Бета",
 "Жанна",
 "Вика",
 "Карл",
 "Тара",
 "Роза-Мари",
 "Эйлин",
 "Терри",
 "Гертруда",
 "Люси",
 "Тоня",
 "Элла",
 "Стейси",
 "Вилма",
 "Джин",
 "Кристин",
 "Джесси",
 "Натали",
 "Агнес",
 "Вера",
 "Вилли",
 "Шарлин",
 "Бесси",
 "Долорес",
 "Мелинда",
 "Краун",
 "Арлин",
 "Морин",
 "Колин",
 "Эллисон",
 "Тамара",
 "Радость",
 "Грузия",
 "Констанс",
 "Лилли",
 "Клаудия",
 "Jaunnie",
 "Марши",
 "Таня",
 "Нелли",
 "Джоанна",
 "Марлен",
 "Хайди",
 "Гленда",
 "Лидия",
 "Альт",
 "Кортни",
 "Марианский",
 "Стелла",
 "Кэролайн",
 "Дора",
 "Джо",
 "Вика",
 "Мэтти",
 "Терри",
 "Максин",
 "Ирма",
 "Мейбл",
 "Марша",
 "Мирт",
 "Лена",
 "Кристи",
 "Дианна",
 "Симп",
 "Хильда",
 "Гвендолин",
 "Дженни",
 "Нора",
 "Марджи",
 "Нина",
 "Кассандра",
 "Лия",
 "Пенни",
 "Кей",
 "Присцилла",
 "Ноеминь",
 "Кароль",
 "Бренди",
 "Ольга",
 "Билли",
 "Диана",
 "Трейси",
 "Леон",
 "Дженни",
 "Фелиция",
 "Соня",
 "Мириам",
 "Велма",
 "Бекки",
 "Бобби",
 "Фиалка",
 "Кристина",
 "Макейла",
 "Клауди",
 "Мэй",
 "Шелли",
 "Маргарита",
 "Рамона",
 "Шерри",
 "Эрик",
 "Катрин",
 "Клэр"
	}
}

local PlayerMeta = FindMetaTable("Player")
local EntityMeta = FindMetaTable("Entity")

// adds a name to the bystander parts generation table
function GM:AddBystanderNamePart(name,gender)
	table.insert(self.BystanderNameParts[gender],name)
end

// removes a name to the bystander parts generation table
function GM:RemoveBystanderNamePart(name,gender)
	table.RemoveByValue(self.BystanderNameParts[gender],name)
end

// returns the bystander parts generation table
function GM:GetBystanderNameParts()
	return self.BystanderNameParts.Male,self.BystanderNameParts.Female
end

function GM:GenerateName(gender,words)
	if #self.BystanderNameParts[gender] <= 0 then
		return "error"
	end
	local name
	for i = 1, words do
		local word = self.BystanderNameParts[gender][math.random(#self.BystanderNameParts[gender])]
		if !name then
			name = word
		else
			name = name .. " " .. word
		end
	end
	return name
end

local function SetCustomIdentity(ply,name,args)
	local Name,Maudel,R,G,B,ProperName,Upper,Core,Lower,Clothes,Accessory=args[1],args[2],tonumber(args[3]),tonumber(args[4]),tonumber(args[5]),"",tonumber(args[6]),tonumber(args[7]),tonumber(args[8]),args[9],args[10]
	Name,Accessory=string.Replace(Name,"_"," "),string.Replace(Accessory,"_"," ")
	if not((Name)and(Maudel)and(R)and(B)and(G)and(Upper)and(Core)and(Lower)and(Clothes)and(Accessory))then ply:PrintMessage(HUD_PRINTTALK,"Убийство: неправильный формат файла идентичности (нужно десять строк: имя, модель, красный цвет, зелёный цвет, синий цвет, верхняя часть тела, основа, нижняя часть тела, одежда, украшение)") return end
	ProperName=string.gsub(Name,"[^%a%d ]","",1e10) -- alphanumeric characters and spaces only
	ProperName=string.Trim(ProperName) -- no leading or trailing whitespace
	if not(string.len(ProperName)>0)then ply:PrintMessage(HUD_PRINTTALK,"Убийство: не удалось распознать пользовательское имя (пример: My Custom Name)") return end
	if((ProperName=="Traitor")or(ProperName=="Murderer"))then ply:PrintMessage(HUD_PRINTTALK,"Убийство: 'traitor' и 'murderer' зарезервированые имена.") return end
	if not(table.HasValue(HMCD_ValidModels,Maudel))then ply:PrintMessage(HUD_PRINTTALK,"Убийство: недопустимый запрос модель (пример: male01)") return end
	if not(((R>=0)and(R<=1))and((G>=0)and(G<=1))and((B>=0)and(B<=1)))then ply:PrintMessage(HUD_PRINTTALK,"Убийство: недопустимые значения цвета (образец: 1 .5 .2)") return end
	--if((Stature<95)or(Stature>105))then ply:PrintMessage(HUD_PRINTTALK,"Убийство: неверный параметр роста! Он должен быть между 95 и 105") return end
	if((Upper<80)or(Upper>130))then ply:PrintMessage(HUD_PRINTTALK,"Убийство: недопустимый параметр верхней части тела! Он должен быть между 80 и 130") return end
	if((Core<75)or(Core>120))then ply:PrintMessage(HUD_PRINTTALK,"Убийство: недопустимый параметр основый тела! Он должен быть между 75 и 120") return end
	if((Lower<80)or(Lower>130))then ply:PrintMessage(HUD_PRINTTALK,"Убийство: недопустимый параметр нижней части тела! Он должен быть между 80 и 130") return end
	if not(table.HasValue(HMCD_ValidClothes,Clothes))then ply:PrintMessage(HUD_PRINTTALK,"Убийство: недопустимый тип одежды! Должно быть либо normal, casual, striped, plaid, formal, young или cold!") return end
	if not(HMCD_Accessories[Accessory])then
		ply:PrintMessage(HUD_PRINTTALK,"Убийство: недействительное украшение! Должно быть одно из следующих:")
		local Str=""
		for key,item in pairs(HMCD_Accessories)do Str=Str..key..", " end
		ply:PrintMessage(HUD_PRINTTALK,Str)
		return
	end
	ply.CustomName=ProperName
	ply.CustomModel=Maudel
	ply.CustomColor=Vector(R,G,B)
	ply.CustomUpperBody=Upper
	ply.CustomCoreBody=Core
	ply.CustomLowerBody=Lower
	ply.CustomClothes=Clothes
	ply.CustomAccessory=Accessory
	--ply.CustomStature=Stature
	ply:PrintMessage(HUD_PRINTTALK,"Пользовательский набор установлен как: "..ProperName.." "..Maudel.." color "..tostring(R).." "..tostring(G).." "..tostring(B).." upperbody "..tostring(Upper).." core "..tostring(Core).." lowerbody "..tostring(Lower).." wearing "..Clothes.." clothes + "..Accessory)
end
concommand.Add("homicide_identity",SetCustomIdentity)

local function OpenAppearanceMenu(ply,cmd,args)
	net.Start("hmcd_openappearancemenu")
	net.Send(ply)
end
concommand.Add("homicide_appearance_menu",OpenAppearanceMenu)

function EntityMeta:GenerateBystanderName()
	local words = 1
	local name = GAMEMODE:GenerateName(self.ModelSex,words)
	if(self.CustomName)then name=self.CustomName end
	self:SetNWString("bystanderName", name)
	self.BystanderName = name
end

function EntityMeta:SetBystanderName(name)
	self:SetNWString("bystanderName", name)
	self.BystanderName = name
end

function EntityMeta:GetBystanderName()
	local name = self:GetNWString("bystanderName")
	if !name || name == "" then
		return "Bystander"
	end
	return name
end

concommand.Add("mu_print_players", function (admin, com, args)
	if !admin:IsAdmin() then return end

	for k, ply in pairs(player.GetAll()) do
		local c = ChatText()
		c:Add(ply:Nick())
		local col = ply:GetPlayerColor()
		c:Add(" " .. ply:GetBystanderName(), Color(col.x * 255, col.y * 255, col.z * 255))
		c:Add(" " .. ply:SteamID())
		c:Add(" " .. team.GetName(ply:Team()), team.GetColor(ply:Team()))
		c:Send(admin)
	end
end)
